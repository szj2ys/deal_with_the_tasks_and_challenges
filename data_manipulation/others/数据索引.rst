pandas索引默认从0开始，设置从1开始

.. code-block:: python

    df.index=df.index+1

dataframe翻转（反转）,reverse

.. code-block:: python

    df.iloc[::-1]
    # reset index
    df.reset_index(drop=True,inplace=True)

输出df的所有列名

.. code-block:: python

    df.columns.to_list()




重建索引

.. code-block:: python

    df.reset_index(drop=True,inplace=True)

取出df的animal和age列

.. code-block:: python

    df.loc[:, ['animal', 'age']]
    # 取出索引为[3, 4, 8]行的animal和age列
    df.loc[df.index[[3, 4, 8]], ['animal', 'age']]


查看数据类型

.. code-block:: python

    df.dtypes


查看education列共有几种学历

.. code-block:: python

    df.education.unique()


计算df中每个种类animal的数量

.. code-block:: python

    df['animal'].value_counts()


取出grammer列为Python字段的行

.. code-block:: python

    # 完全匹配
    df[df['grammer'] == 'Python']
    df.query('grammer == Python')
    df.loc[df['Team'].isin(['England', 'Italy', 'Russia']), ['Team','Shooting Accuracy']]
    # isin的速度快，因为采用的是向量化的方式
    # 包含
    df[df['grammer'].str.contains("Python")]
    # 开头
    df[df['grammer'].str.startwith("Python")]


取出age在2,4间的行（不含）

.. code-block:: python

    df[(df['age']>2) & (df['age']<4)]
    # 方法二
    df[df['age'].between(2, 4)]


前10

.. code-block:: python

    df.iloc[:10,:]


后10

.. code-block:: python

    todo


多列索引

.. code-block:: python

    df.loc[:,['Height','Math']]  # 等价于df[['Height','Math']]
